name: CD
run-name: ${{ inputs.model }} CD
# NOTE: This workflow requires:
# permissions.contents:write
# secrets:inherit with an appropriate GitHub Environment for deployment in the caller
on:
  workflow_call:
    inputs:
      model:
        type: string
        required: true
        description: The model that is being tested and deployed
      root-sbd:
        type: string
        required: false
        # default: The ${{ inputs.model }} above
        description: |
          The name of the root Spack Bundle Definition, if it is different from the model name.
          This is often a package named similarly in ACCESS-NRI/spack-packages.
  # Callers usually have the trigger:
  # push:
  #   branches:
  #     - main
  #     - backport/*.*
  #   paths:
  #     - config/**
  #     - spack.yaml

env:
  SPACK_YAML_MODEL_YQ: .spack.specs[0]
jobs:
  defaults:
    name: Set Defaults
    # Unfortunately, you can't set a dynamic default value based on `inputs` yet
    runs-on: ubuntu-latest
    outputs:
      root-sbd: ${{ steps.root-sbd.outputs.default }}
    steps:
      - name: root-sbd
        id: root-sbd
        run: |
          if [ -z "${{ inputs.root-sbd }}" ]; then
            echo "default=${{ inputs.model }}" >> $GITHUB_OUTPUT
          else
            echo "default=${{ inputs.root-sbd }}" >> $GITHUB_OUTPUT
          fi

  verify-settings:
    name: Verify Deployment Settings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ACCESS-NRI/build-cd
          ref: main

      - uses: access-nri/build-cd/.github/actions/validate-deployment-settings@main
        with:
          settings-path: ./config/settings.json
          # TODO: Turn this into a matrix job of targets
          target: Gadi
          error-level: error

  push-tag:
    name: Tag Deployment
    runs-on: ubuntu-latest
    needs:
      - verify-settings
    permissions:
      contents: write
    outputs:
      name: ${{ steps.tag.outputs.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate Tag
        id: tag
        # Get the tag name from the `spack.yaml` that was merged into main, which
        # is of the form `<model>@git.<version>`.
        run: echo "name=$(yq '${{ env.SPACK_YAML_MODEL_YQ }} | split("@git.") | .[1]' spack.yaml)" >> $GITHUB_OUTPUT

      - name: Import Commit-Signing Key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4  # v6.1.0
        with:
          gpg_private_key: ${{ secrets.GH_ACTIONS_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GH_ACTIONS_BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_committer_name: ${{ vars.GH_ACTIONS_BOT_GIT_USER_NAME }}
          git_committer_email: ${{ vars.GH_ACTIONS_BOT_GIT_USER_EMAIL }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Push Tag
        env:
          TAG: ${{ steps.tag.outputs.name }}
        run: |
          git tag ${{ env.TAG }} -m "Deployment of ${{ inputs.model }} ${{ env.TAG }} via build-cd 'cd.yml' workflow"
          git push --tags

  deploy-release:
    name: Deploy Release
    needs:
      - defaults
      - push-tag
    uses: access-nri/build-cd/.github/workflows/deploy-1-setup.yml@main
    with:
      ref: ${{ github.ref_name }}
      version: ${{ needs.push-tag.outputs.name }}
      root-sbd: ${{ needs.defaults.outputs.root-sbd }}
    secrets: inherit
    permissions:
      contents: write
