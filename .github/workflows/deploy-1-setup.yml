name: Deployment Setup
on:
  workflow_call:
    inputs:
      type:
        type: string
        required: false
        default: release
        description: The type of deployment - either 'release' or 'prerelease'
      ref:
        type: string
        required: true
        description: The git commit-ish ref where the `spack.yaml` is located
      version:
        type: string
        required: true
        description: The version for the model being deployed
      root-sbd:
        type: string
        required: true
        description: The root SBD that is being used as the modulefile name

jobs:
  setup-spack-env:
    name: Setup Spack Environment
    runs-on: ubuntu-latest
    outputs:
      # Model name inferred from repository name
      model: ${{ steps.get-model.outputs.model }}
      # Spack env name in form <model>-<version>
      env-name: ${{ steps.get-env-name.outputs.env-name }}
    steps:
      - name: Get Model
        id: get-model
        # for the cases where the repo name is in uppercase but the package name is lowercase (eg. access-nri/MOM5)
        # and also the cases where there is a '.' in the repo name, which isn't spack-compliant (eg. access-nri/ACCESS-ESM1.5)
        run: echo "model=$(echo ${{ github.event.repository.name }} | tr [:upper:] [:lower:] | tr '.' 'p')" >> $GITHUB_OUTPUT

      - name: Set Spack Env Name String
        id: get-env-name
        # replace occurences of '.' with '_' in environment name as spack doesn't support '.'. Ex: 'access-om2-v1.0.0' -> 'access-om2-v1_0_0'.
        run: echo "env-name=$(echo '${{ steps.get-model.outputs.model }}-${{ inputs.version }}' | tr '.' '_')" >> $GITHUB_OUTPUT

  setup-deployment-env:
    name: Setup Deployment Environment
    runs-on: ubuntu-latest
    outputs:
      deployment-environments: ${{ steps.get-deployment-environment.outputs.deployment-environments }}
    steps:
      - name: Checkout Config
        uses: actions/checkout@v4
        with:
          repository: access-nri/build-cd

      - name: Get Environments
        id: get-deployment-environment
        run: |
          if [[ "${{ inputs.type }}" == "release" ]]; then
            echo "deployment-environments=$(jq --compact-output '.environments' ./config/deployment-environment.json)" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.type }}" == "prerelease" ]]; then
            echo "deployment-environments=$(jq --compact-output '."prerelease-environments"' ./config/deployment-environment.json)" >> $GITHUB_OUTPUT
          else
            echo "::error::The 'type' input was invalid. Check the inputs documentation."
            exit 1
          fi

  deployment:
    name: Deployment
    needs:
      - setup-spack-env
      - setup-deployment-env
    strategy:
      fail-fast: false
      matrix:
        deployment-environment: ${{ fromJson(needs.setup-deployment-env.outputs.deployment-environments) }}
    uses: access-nri/build-cd/.github/workflows/deploy-2-start.yml@main
    with:
      type: ${{ inputs.type }}
      model: ${{ needs.setup-spack-env.outputs.model }}
      ref: ${{ inputs.ref }}
      version: ${{ inputs.version }}
      env-name: ${{ needs.setup-spack-env.outputs.env-name }}
      deployment-environment: ${{ matrix.deployment-environment }}
      root-sbd: ${{ inputs.root-sbd }}
    secrets: inherit
