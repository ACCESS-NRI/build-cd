name: PR Closed Cleanup
run-name: ${{ inputs.model }} PR Closed Cleanup
# Remove prereleases that were part of a closed PR, so we save space
# on our deployment targets. If needed, one can still get the
# spack.yaml as part of the closed PR and revive it themselves.

# NOTE: the caller requires the following permissions:
# secrets:inherit
on:
  workflow_call:
    inputs:
      root-sbd:
        type: string
        required: true
        description: The model package name that is going to be removed
  # Callers usually have the trigger:
  # pull_request:
  #   types:
  #     - closed
  #   branches:
  #     - main
  #     - backport/*.*
  #   paths:
  #     - config/**
  #     - spack.yaml
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version-pattern: ${{ steps.version.outputs.pattern }}
      targets: ${{ steps.target.outputs.valid-targets }}
    steps:
      - name: Get Version Pattern
        id: version
        # For example, `access-om3-pr12-*`
        run: echo "pattern=${{ inputs.root-sbd }}-pr${{ github.event.pull_request.number }}-*" >> $GITHUB_OUTPUT

      - name: Generate Deployment Target Matrix
        id: target
        uses: access-nri/build-cd/.github/actions/get-target-matrix@v3
        with:
          targets: ${{ vars.PRERELEASE_DEPLOYMENT_TARGETS }}

  undeploy-prereleases:
    name: Undeploy Prereleases Matching ${{ needs.setup.outputs.version-pattern }}
    needs:
      - setup
    strategy:
      matrix:
        target: ${{ fromJson(needs.setup.outputs.targets) }}
      fail-fast: false
    uses: access-nri/build-cd/.github/workflows/undeploy-1-setup.yml@main
    with:
      version-pattern: ${{ inputs.root-sbd }}-pr${{ github.event.pull_request.number }}-*
      target: ${{ matrix.target }}
      type: Prerelease
    secrets: inherit
