name: Deploy Start
concurrency: ${{ inputs.deployment-environment }}
on:
  workflow_call:
    inputs:
      model:
        type: string
        required: true
        description: The model to deploy
      version:
        type: string
        required: true
        description: The version of the model to deploy
      env-name:
        type: string
        required: true
        description: The spack-env-compliant environment name for the model
      deployment-environment:
        type: string
        required: true
        description: The GitHub deployment environment name

jobs:
  deploy-to-environment:
    name: Deploy to ${{ inputs.deployment-environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.deployment-environment }}
    steps:
      # Deployment
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Get packages and config versions
        id: versions
        run: |
          echo "packages=$(jq --compact-output --raw-output '."spack-packages"' ./config/versions.json)" >> $GITHUB_OUTPUT
          echo "config=$(jq --compact-output --raw-output '."spack-config"' ./config/versions.json)" >> $GITHUB_OUTPUT

      - name: Setup SSH
        id: ssh
        uses: access-nri/actions/.github/actions/setup-ssh@main
        with:
          private-key: ${{ secrets.SSH_KEY }}
          hosts: |
            ${{ secrets.HOST }}
            ${{ secrets.HOST_DATA }}

      - name: Copy spack.yaml
        run: |
          rsync -e 'ssh -i ${{ steps.ssh.outputs.private-key-path }}' \
            spack.yaml \
            ${{ secrets.USER }}@${{ secrets.HOST_DATA }}:${{ vars.SPACK_YAML_LOCATION }}

      - name: Deploy to ${{ inputs.deployment-environment }}
        # ssh into deployment environment, create and activate the env, install the spack.yaml.
        run: |
          ssh ${{ secrets.USER}}@${{ secrets.HOST }} -i ${{ steps.ssh.outputs.private-key-path }} /bin/bash <<'EOT'
          git -C ${{ vars.SPACK_PACKAGES_LOCATION }} fetch
          git -C ${{ vars.SPACK_PACKAGES_LOCATION }} checkout --force ${{ steps.versions.outputs.packages }}
          git -C ${{ vars.SPACK_CONFIG_LOCATION }} fetch
          git -C ${{ vars.SPACK_CONFIG_LOCATION }} checkout --force ${{ steps.versions.outputs.config }}
          . ${{ vars.SPACK_CONFIG_LOCATION }}/spack-enable.bash
          spack env create ${{ inputs.env-name }} ${{ vars.SPACK_YAML_LOCATION }}/spack.yaml
          spack env activate ${{ inputs.env-name }}
          spack --debug install --fresh || exit $?
          spack module tcl refresh --delete-tree -y
          spack find --paths > ${{ vars.SPACK_LOCATION }}/var/spack/environments/${{ inputs.env-name }}/spack.location
          spack env deactivate
          echo "$(date): Deployed ${{ inputs.model }} ${{ inputs.version }} with spack-packages ${{ steps.versions.outputs.packages }}, spack-config ${{ steps.versions.outputs.config }}" >> ${{ vars.SPACK_RELEASE_LOCATION }}/release.log
          EOT

      # Release
      - name: Get Release Metadata
        run: |
          rsync -e 'ssh -i ${{ steps.ssh.outputs.private-key-path }}' \
            '${{ secrets.USER}}@${{ secrets.HOST_DATA }}:${{ vars.SPACK_LOCATION }}/var/spack/environments/${{ inputs.env-name }}/spack.*' \
            ./${{ inputs.env-name }}
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.model}} ${{ inputs.version }}
          body: |
            This release of ${{ inputs.model }} ${{ inputs.version }} uses [spack-packages ${{ steps.versions.outputs.packages }}](https://github.com/ACCESS-NRI/spack-packages/releases/tag/${{ steps.versions.outputs.packages }}) and [spack-config ${{ steps.versions.outputs.config }}](https://github.com/ACCESS-NRI/spack-config/releases/tag/${{ steps.versions.outputs.config }}).
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ./${{ inputs.env-name }}/spack.yaml
            ./${{ inputs.env-name }}/spack.lock
            ./${{ inputs.env-name }}/spack.location
