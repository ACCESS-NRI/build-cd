name: Comment Command
run-name: ${{ inputs.model }} Comment Command
# NOTE: This workflow requires:
# permissions.contents:write
on:
  workflow_call:
    inputs:
      model:
        type: string
        required: true
        description: The model that is being tested and deployed
      root-sbd:
        type: string
        required: false
        default: ${{ inputs.model }}
        description: |
          The name of the root Spack Bundle Definition, if it is different from the model name.
          This is often a package named similarly in ACCESS-NRI/spack-packages.
  # Callers usually have the trigger:
  # issue_comment:
  #   types:
  #     - created
  #     - edited
env:
  RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  SPACK_YAML_MODEL_YQ: .spack.specs[0]
  SPACK_YAML_MODEL_PROJECTION_YQ: .spack.modules.default.tcl.projections.${{ inputs.root-sbd }}
jobs:
  bump-version:
    name: Bump spack.yaml
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '!bump')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GH_COMMIT_CHECK_TOKEN }}

      - name: Setup
        id: setup
        # outputs:
        #   original-version: The version contained within the spack.yaml
        #   version: The version that will be bumped (could be latest tag instead of original-version)
        #   bump: The bump type (major, minor or current as specified in the bump-version action)
        run: |
          ./scripts/ci-comment/setup-bump-args.bash ${{ github.event.issue.number }} "${{ github.event.issue.comment }}"

      - name: Bump Version
        id: bump
        uses: access-nri/actions/.github/actions/bump-version@main
        with:
          version: ${{ steps.setup.outputs.version }}
          versioning-scheme: calver-minor
          bump-type: ${{ steps.setup.outputs.bump }}

      - name: Import Commit-Signing Key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4  # v6.1.0
        with:
          gpg_private_key: ${{ secrets.GH_ACTIONS_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GH_ACTIONS_BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_committer_name: ${{ vars.GH_ACTIONS_BOT_GIT_USER_NAME }}
          git_committer_email: ${{ vars.GH_ACTIONS_BOT_GIT_USER_EMAIL }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Update, Commit and Push the Bump
        run: |
          yq -i '${{ env.SPACK_YAML_MODEL_YQ }} = "${{ inputs.root-sbd }}@git.${{ steps.bump.outputs.after }}"' spack.yaml
          yq -i '${{ env.SPACK_YAML_MODEL_PROJECTION_YQ }} = "{name}/${{ steps.bump.outputs.after }}"' spack.yaml
          git add spack.yaml
          git commit -m "spack.yaml: Updated ${{ inputs.root-sbd }} package version from ${{ steps.setup.outputs.original-version }} to ${{ steps.bump.outputs.after }}"
          git push

      - name: Success Notifier
        uses: access-nri/actions/.github/actions/pr-comment@main
        with:
          comment: |
            :white_check_mark: Version bumped from `${{ steps.setup.outputs.original-version }}` to `${{ steps.bump.outputs.after }}` :white_check_mark:

      - name: Failure Notifier
        if: failure()
        uses: access-nri/actions/.github/actions/pr-comment@main
        with:
          comment: |
            :x: Failed to bump version or commit changes, see ${{ env.RUN_URL }} :x:
