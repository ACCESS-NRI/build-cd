name: Validate Repo Version
description: Action that validates that a version in `config/versions.json` matches the version in the repository
inputs:
  repo-to-check:
    type: string
    required: true
    description: ACCESS-NRI repository to validate associated version in `config/versions.json`
outputs:
  version:
    value: ${{ steps.jq.outputs.version }}
    description: Version of spack-packages from the `config/versions.json`
runs:
  using: composite
  steps:
    # Checkout the callers `config/versions.json`
    - uses: actions/checkout@v4

    # Get the version from the `config/versions.json`
    - name: Setup
      id: jq
      shell: bash
      run: |
        version=$(jq --compact-output --raw-output '."${{ inputs.repo-to-check }}"' ./config/versions.json)

        if [[ "${version}" == "null" ]]; then
          exit 1
        else
          echo "version=${version}" >> $GITHUB_OUTPUT
        fi

    # Verify that the repository exists at the given ref
    - name: Version Check
      id: check
      uses: actions/checkout@v4
      with:
        repository: access-nri/${{ inputs.repo-to-check }}
        ref: ${{ steps.versions.outputs.packages }}
        path: repo

    - name: Failure Notifier
      if: failure()
      shell: bash
      run: |
        if [[ "${{ steps.jq.outcome }}" == "failure" ]]; then
          echo "::error::There is no ${{ inputs.repo-to-check }} in `config/versions.json`, or the file doesn't exist."
        elif [[ "${{ steps.check.outcome }}" == "failure" ]]; then
          echo "::error::${{ inputs.repo-to-check }} at the specified ref (${{ steps.versions.outputs.packages }}) doesn't exist."
        fi
        exit 1
